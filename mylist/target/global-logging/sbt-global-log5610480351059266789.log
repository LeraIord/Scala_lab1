[0m[[0m[0mdebug[0m] [0m[0m> Exec(;Test/compile; collectAnalyses, None, Some(CommandSource(network-1)))[0m
[0m[[0m[0mdebug[0m] [0m[0munmatched Processing event for requestId None: None[0m
[0m[[0m[0mdebug[0m] [0m[0munmatched Done event for requestId None: None[0m
[0m[[0m[0mdebug[0m] [0m[0m> Exec(Test/compile, None, Some(CommandSource(network-1)))[0m
[0m[[0m[0mdebug[0m] [0m[0munmatched Processing event for requestId None: None[0m
[0m[[0m[0mdebug[0m] [0m[0mEvaluating tasks: Test / compile[0m
[0m[[0m[0mdebug[0m] [0m[0mRunning task... Cancel: Signal, check cycles: false, forcegc: true[0m
[0m[[0m[0mdebug[0m] [0m[0mjsonRpcNotify: JsonRpcNotificationMessage(2.0, build/taskStart, {"taskId":{"id":"19","parents":[]},"eventTime":1656083703988,"message":"Compiling root","dataKind":"compile-task","data":{"target":{"uri":"file:/home/max/scala1/mylist/#root/Compile"}}})[0m
[0m[[0m[0minfo[0m] [0m[0mcompiling 1 Scala source to /home/max/scala1/mylist/target/scala-3.1.2/classes ...[0m
[0m[[0m[0mdebug[0m] [0m[0mjsonRpcNotify: JsonRpcNotificationMessage(2.0, build/logMessage, {"type":3,"message":"compiling 1 Scala source to /home/max/scala1/mylist/target/scala-3.1.2/classes ..."})[0m
[0m[[0m[0mdebug[0m] [0m[0mjsonRpcNotify: JsonRpcNotificationMessage(2.0, build/publishDiagnostics, {"textDocument":{"uri":"file:///home/max/scala1/mylist/src/main/scala/Main.scala"},"buildTarget":{"uri":"file:/home/max/scala1/mylist/#root/Compile"},"diagnostics":[{"range":{"start":{"line":74,"character":39},"end":{"line":74,"character":52}},"severity":1,"source":"sbt","message":"Found:    List[\u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mA\u001b[0m\u001b[1m\u001b[31m,\u001b[0m\u001b[1m\u001b[31m \u001b[0mList[A]\u001b[1m\u001b[31m)\u001b[0m]\nRequired: List[List[A]]"}],"reset":false})[0m
[0m[[0m[31merror[0m] [0m[0m[31m-- [E007] Type Mismatch Error: /home/max/scala1/mylist/src/main/scala/Main.scala:75:47 [0m[0m
[0m[[0m[31merror[0m] [0m[0m[31m75 |[0m      [33mcase[0m Cons(head,tail) => go(tail, head.zip(acc))[0m
[0m[[0m[31merror[0m] [0m[0m   |                                       [31m^^^^^^^^^^^^^[0m[0m
[0m[[0m[31merror[0m] [0m[0m   |                                       Found:    List[[1m[31m([0m[1m[31mA[0m[1m[31m,[0m[1m[31m [0mList[A][1m[31m)[0m][0m
[0m[[0m[31merror[0m] [0m[0m   |                                       Required: List[List[A]][0m
[0m[[0m[0mdebug[0m] [0m[0mjsonRpcNotify: JsonRpcNotificationMessage(2.0, build/logMessage, {"type":1,"message":"\u001b[31m-- [E007] Type Mismatch Error: /home/max/scala1/mylist/src/main/scala/Main.scala:75:47 \u001b[0m\n\u001b[31m75 |\u001b[0m      \u001b[33mcase\u001b[0m Cons(head,tail) => go(tail, head.zip(acc))\n   |                                       \u001b[31m^^^^^^^^^^^^^\u001b[0m\n   |                                       Found:    List[\u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mA\u001b[0m\u001b[1m\u001b[31m,\u001b[0m\u001b[1m\u001b[31m \u001b[0mList[A]\u001b[1m\u001b[31m)\u001b[0m]\n   |                                       Required: List[List[A]]"})[0m
[0m[[0m[0mdebug[0m] [0m[0mjsonRpcNotify: JsonRpcNotificationMessage(2.0, build/publishDiagnostics, {"textDocument":{"uri":"file:///home/max/scala1/mylist/src/main/scala/Main.scala"},"buildTarget":{"uri":"file:/home/max/scala1/mylist/#root/Compile"},"diagnostics":[{"range":{"start":{"line":76,"character":3},"end":{"line":76,"character":3}},"severity":1,"source":"sbt","message":"Found:    Unit\nRequired: List[List[A]]"}],"reset":false})[0m
[0m[[0m[31merror[0m] [0m[0m[31m-- [E007] Type Mismatch Error: /home/max/scala1/mylist/src/main/scala/Main.scala:77:3 [0m[0m
[0m[[0m[31merror[0m] [0m[0m[31m77 |[0m  }[0m
[0m[[0m[31merror[0m] [0m[0m   |   [31m^[0m[0m
[0m[[0m[31merror[0m] [0m[0m   |   Found:    Unit[0m
[0m[[0m[31merror[0m] [0m[0m   |   Required: List[List[A]][0m
[0m[[0m[0mdebug[0m] [0m[0mjsonRpcNotify: JsonRpcNotificationMessage(2.0, build/logMessage, {"type":1,"message":"\u001b[31m-- [E007] Type Mismatch Error: /home/max/scala1/mylist/src/main/scala/Main.scala:77:3 \u001b[0m\n\u001b[31m77 |\u001b[0m  }\n   |   \u001b[31m^\u001b[0m\n   |   Found:    Unit\n   |   Required: List[List[A]]"})[0m
[0m[[0m[31merror[0m] [0m[0mtwo errors found[0m
[0m[[0m[0mdebug[0m] [0m[0mjsonRpcNotify: JsonRpcNotificationMessage(2.0, build/logMessage, {"type":1,"message":"two errors found"})[0m
[0m[[0m[0mdebug[0m] [0m[0mjsonRpcNotify: JsonRpcNotificationMessage(2.0, build/publishDiagnostics, {"textDocument":{"uri":"file:///home/max/scala1/mylist/src/main/scala/Main.scala"},"buildTarget":{"uri":"file:/home/max/scala1/mylist/#root/Compile"},"diagnostics":[{"range":{"start":{"line":74,"character":39},"end":{"line":74,"character":52}},"severity":1,"source":"sbt","message":"Found:    List[\u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mA\u001b[0m\u001b[1m\u001b[31m,\u001b[0m\u001b[1m\u001b[31m \u001b[0mList[A]\u001b[1m\u001b[31m)\u001b[0m]\nRequired: List[List[A]]"},{"range":{"start":{"line":76,"character":3},"end":{"line":76,"character":3}},"severity":1,"source":"sbt","message":"Found:    Unit\nRequired: List[List[A]]"}],"reset":true})[0m
[0m[[0m[0mdebug[0m] [0m[0mjsonRpcNotify: JsonRpcNotificationMessage(2.0, build/taskFinish, {"taskId":{"id":"19","parents":[]},"eventTime":1656083711848,"message":"Compiled root","status":2,"dataKind":"compile-report","data":{"target":{"uri":"file:/home/max/scala1/mylist/#root/Compile"},"errors":2,"warnings":0,"time":7860}})[0m
[0m[[0m[0mdebug[0m] [0m[0munmatched json error for requestId None: {"code":-32603,"message":"(Compile / \u001b[31mcompileIncremental\u001b[0m) Compilation failed"}[0m
[0m[[0m[31merror[0m] [0m[0m(Compile / [31mcompileIncremental[0m) Compilation failed[0m
[0m[[0m[0mdebug[0m] [0m[0mjsonRpcNotify: JsonRpcNotificationMessage(2.0, build/logMessage, {"type":1,"message":"(Compile / \u001b[31mcompileIncremental\u001b[0m) Compilation failed"})[0m
[0m[[0m[31merror[0m] [0m[0mTotal time: 9 s, completed Jun 24, 2022 6:15:12 PM[0m
[0m[[0m[0mdebug[0m] [0m[0munmatched Done event for requestId None: None[0m
[0m[[0m[0mdebug[0m] [0m[0m> Exec(shell, None, None)[0m
[0m[[0m[0mdebug[0m] [0m[0mForcing garbage collection...[0m
